#include <Servo.h>//CONSTANTSint servoPins[3] = {A0, A1, A2};//{Purple, Cyan, Yellow}Servo servo[3];//GLOBALSint servoAngle[3] = {0, 0, 0};//Unused as of yetint timeToRun = 0; enum TargetServo { purple, cyan, yellow, grey};TargetServo ts = grey;void setup(){ //Open serial communication Serial.begin(9600);  //Attach all servos for (int i = 0; i < 3; i++) {  servo[i].attach(servoPins[i]);  servo[i].write(servoAngle[i]); }}void loop() { get_input(); do_motion();}//Purple/Cyan/Yellow/Greyvoid get_input() { if (Serial.available() > 0) {  String order = Serial.readStringUntil('#');  if (order[0] == 'P'){   ts = purple;  }  else if (order[0] == 'C') {   ts = cyan;  }  else if (order[0] == 'Y') {   ts = yellow;  } }}void do_motion() { switch(ts) {  case purple: move_type1(0); break;  case cyan:  move_type1(1); break;  case yellow:  move_type1(2);break;  default: return; } ts = grey;}//Different types of motion to test and tweak:void move_type1(int i) { servo[i].write(0); delay(500); servo[i].write(180); delay(1000); servo[i].write(90); delay(500);}void move_type2(int i) { for(int ang = 90; ang < 180; ang++) {                              servo[i].write(ang);  servo[i].write(ang);      delay(50);                   }  for(int ang = 180; ang > 0; ang--) {                               servo[i].write(ang);          servo[i].write(ang);     delay(50);       }  for(int ang = 0; ang < 90; ang++) {                              servo[i].write(ang);  servo[i].write(ang);      delay(50);                   }}
